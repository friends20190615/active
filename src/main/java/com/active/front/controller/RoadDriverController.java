package com.active.front.controller;import com.active.bean.CityInfo;import com.active.bean.DealerInfo;import com.active.bean.ProvinceInfo;import com.active.bean.RoadDriverInfo;import com.active.front.service.RoadDriverService;import com.alibaba.fastjson.JSONObject;import org.apache.commons.lang3.StringUtils;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import javax.servlet.http.HttpServletRequest;import java.text.Collator;import java.util.Collections;import java.util.Comparator;import java.util.List;import java.util.Locale;/** * 这是一个类说明 * * @author ta * @date 2019/8/18 下午8:51 * @since 1.0 */@Controller@RequestMapping("/road")public class RoadDriverController {    private final static Logger logger = LoggerFactory.getLogger(RoadDriverController.class);    @Autowired    private RoadDriverService roadDriverService;    @RequestMapping("getProvinceList")    @ResponseBody    public String getProvinceList(HttpServletRequest request){        JSONObject res = new JSONObject();        try {            List<ProvinceInfo> provinceInfos = roadDriverService.getProvinceInfos();            Collections.sort(provinceInfos, new Comparator<ProvinceInfo>() {                @Override                public int compare(ProvinceInfo o1, ProvinceInfo o2) {                    return Collator.getInstance(Locale.CHINESE).compare(o1.getProvinceName(),o2.getProvinceName());                }            });            res.put("result",provinceInfos);            res.put("status",0);        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }    @RequestMapping("getCityList")    @ResponseBody    public String getCityList(HttpServletRequest request){        JSONObject res = new JSONObject();        try {            String provinceName = request.getParameter("pName");            ProvinceInfo provinceInfo = new ProvinceInfo();            provinceInfo.setProvinceName(provinceName);            List<CityInfo> cityInfos = roadDriverService.getCityInfos(provinceInfo);            Collections.sort(cityInfos, new Comparator<CityInfo>() {                @Override                public int compare(CityInfo o1, CityInfo o2) {                    return Collator.getInstance(Locale.CHINESE).compare(o1.getCityName(),o2.getCityName());                }            });            res.put("result",cityInfos);            res.put("status",0);        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }    @RequestMapping("getDealerList")    @ResponseBody    public String getDealerList(HttpServletRequest request){        JSONObject res = new JSONObject();        try {            String provinceName = request.getParameter("pName");            String cityName = request.getParameter("cName");            CityInfo cityInfo = new CityInfo();            cityInfo.setCityName(cityName);            cityInfo.setPrivinceName(provinceName);            List<DealerInfo> dealerInfoList = roadDriverService.getDealerInfos(cityInfo);            Collections.sort(dealerInfoList, new Comparator<DealerInfo>() {                @Override                public int compare(DealerInfo o1, DealerInfo o2) {                    return Collator.getInstance(Locale.CHINESE).compare(o1.getDealerName(),o2.getDealerName());                }            });            res.put("result",dealerInfoList);            res.put("status",0);        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }    @RequestMapping("addInfo")    @ResponseBody    public String addInfo(RoadDriverInfo roadDriverInfo,HttpServletRequest request){        JSONObject res = new JSONObject();        try {            RoadDriverInfo rdi = roadDriverService.getInfo(roadDriverInfo);            if(rdi != null){                res.put("result",rdi);                res.put("msg","successed");                res.put("status",1);            }else{              roadDriverService.insertInfo(roadDriverInfo);                RoadDriverInfo rdi2  = roadDriverService.getInfo(roadDriverInfo);                res.put("result",rdi2);              res.put("msg","success");              res.put("status",0);            }        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }    @RequestMapping("getList")    @ResponseBody    public String getList(RoadDriverInfo roadDriverInfo,HttpServletRequest request){        JSONObject res = new JSONObject();        res.put("code", 0);        res.put("msg", "success");        try {            roadDriverInfo.setPageSize((roadDriverInfo.getPage()-1)*roadDriverInfo.getLimit());            List<RoadDriverInfo> roadDriverInfos = roadDriverService.getList(roadDriverInfo);            Integer count = roadDriverService.getCount(roadDriverInfo);            res.put("data",roadDriverInfos);            res.put("count",count);        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }}