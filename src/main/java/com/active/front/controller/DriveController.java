package com.active.front.controller;import com.active.bean.DriveInfo;import com.active.common.remote.LoanRemoteUtil;import com.active.common.utils.DateUtils;import com.active.common.utils.HttpUtil;import com.active.front.service.DriveService;import com.alibaba.fastjson.JSONObject;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.ResponseBody;import sun.net.www.http.HttpClient;import javax.servlet.http.HttpServletRequest;import java.util.Date;import java.util.HashMap;import java.util.Map;import java.util.Random;/** * 预约试驾controller * * @author ta * @date 2019/7/1 下午11:12 * @since 1.0 */@Controller@RequestMapping("/drive")public class DriveController {    private final static Logger logger = LoggerFactory.getLogger(DriveController.class);    @Autowired    private DriveService driveService;    @RequestMapping("newMember")    @ResponseBody    public String pullNewMember(DriveInfo driveInfo, HttpServletRequest request){        JSONObject res = new JSONObject();        res.put("code", 0);        res.put("msg", "success");        try {            DriveInfo exit =driveService.getInfo(driveInfo);            if(exit ==null){                driveService.insertInfo(driveInfo);            }else{                //已经存在                res.put("code", 5);                res.put("msg", "success");            }        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }    @RequestMapping("getCity")    @ResponseBody    public String getCity(DriveInfo driveInfo, HttpServletRequest request){        JSONObject res = new JSONObject();        res.put("code", 0);        res.put("msg", "success");        try {            Map<String,String> paramsMap = new HashMap<String, String>();            paramsMap.put("client_code","");            paramsMap.put("timestamp", DateUtils.date2String(new Date(),DateUtils.dateTimeYNDHMSPattern));            paramsMap.put("nonce_str", LoanRemoteUtil.getRandomStr(12));            String url = LoanRemoteUtil.getSignatureUrl(paramsMap);            String jsonStr = HttpUtil.doPost(url,paramsMap);            System.out.println(jsonStr);        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }    @RequestMapping("getDealer")    @ResponseBody    public String getDealer(DriveInfo driveInfo, HttpServletRequest request){        JSONObject res = new JSONObject();        res.put("code", 0);        res.put("msg", "success");        try {            Map<String,String> paramsMap = new HashMap<String, String>();            paramsMap.put("client_code","");            paramsMap.put("timestamp", DateUtils.date2String(new Date(),DateUtils.dateTimeYNDHMSPattern));            paramsMap.put("nonce_str", LoanRemoteUtil.getRandomStr(12));            paramsMap.put("is_extend","");            String url = LoanRemoteUtil.getSignatureUrl(paramsMap);            String jsonStr = HttpUtil.doPost(url,paramsMap);            System.out.println(jsonStr);        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }    @RequestMapping("getModalShow")    @ResponseBody    public String getModalShow(DriveInfo driveInfo, HttpServletRequest request){        JSONObject res = new JSONObject();        res.put("code", 0);        res.put("msg", "success");        try {            Map<String,String> paramsMap = new HashMap<String, String>();            paramsMap.put("client_code","");            paramsMap.put("timestamp", DateUtils.date2String(new Date(),DateUtils.dateTimeYNDHMSPattern));            paramsMap.put("nonce_str", LoanRemoteUtil.getRandomStr(12));            paramsMap.put("brand_id","");            String url = LoanRemoteUtil.getSignatureUrl(paramsMap);            String jsonStr = HttpUtil.doPost(url,paramsMap);            System.out.println(jsonStr);        }catch (Exception e){            logger.error("error："+e.getMessage());            res.put("code", -1);            res.put("msg", "error");        }        return res.toJSONString();    }}