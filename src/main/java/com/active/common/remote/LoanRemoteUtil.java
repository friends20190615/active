package com.active.common.remote;import com.active.common.utils.ShaUtil;import com.active.common.utils.SysUtil;import org.apache.commons.lang.StringUtils;import java.text.MessageFormat;import java.util.Comparator;import java.util.Map;import java.util.Random;import java.util.TreeMap;/** * 第三方工具类 * * @author ta * @date 2019/7/2 下午11:16 * @since 1.0 */public class LoanRemoteUtil {    private static String url = null;    static{        String loanUrl = SysUtil.getResourceValue("env");        if(StringUtils.isNotBlank(loanUrl)){            String pUrl = "https://{0}/service/dealer/getDealer?signature=";            MessageFormat.format(pUrl,loanUrl);            url = pUrl;        }    }    public static String getSignatureUrl(Map<String,String> paramsMap){        Map<String, String> resultMap = sortMapByKey(paramsMap);        StringBuilder sb= new StringBuilder();        for (Map.Entry<String, String> entry : resultMap.entrySet()) {            sb.append(entry.getValue());        }        String str = ShaUtil.getSha1(sb.toString());        url+=str;        return url;    }    /**     * 使用 Map按key进行排序     * @param map     * @return     */    public static Map<String, String> sortMapByKey(Map<String, String> map) {        if (map == null || map.isEmpty()) {            return null;        }        Map<String, String> sortMap = new TreeMap<String, String>(                new MapKeyComparator());        sortMap.putAll(map);        return sortMap;    }    /**     *     * @param length 需要的字符长度     * @return 返回随机字母数字组合字符串     */    public static String getRandomStr(int length) {        String val = "";        Random random = new Random();        //参数length，表示生成几位随机数        for (int i = 0; i < length; i++) {            //随机数由0-9，a-z,A-Z组成，数字占10个，字母占52个，数字、字母占比1:5（标准的应该是10:52）            //random.nextInt(6) 0-5中6个数取一个            String charOrNum = (random.nextInt(6)+6) % 6 >=1 ? "char" : "num";            //输出字母还是数字            if ("char".equalsIgnoreCase(charOrNum)) {                //输出是大写字母还是小写字母，输出比例为1:1                int temp = random.nextInt(2) % 2 == 0 ? 97 : 65;                //char（65）-char(90) 为大写字母A-Z；char(97)-char(122)为小写字母a-z                val += (char) (random.nextInt(26) + temp);            } else if ("num".equalsIgnoreCase(charOrNum)) {                val += String.valueOf(random.nextInt(10));            }        }        return val;    }}class MapKeyComparator implements Comparator<String> {    @Override    public int compare(String str1, String str2) {        return str1.compareTo(str2);    }}